plugins {
	id 'java'
	id 'application'
	id 'org.springframework.boot' version '3.1.0'
	id 'io.spring.dependency-management' version '1.1.0'
}

test {
	useJUnitPlatform()
}

jar {
	archiveBaseName = 'spring-mjc-app'
	archiveVersion =  '0.1.0'
}

allprojects {
	apply plugin: 'java'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	group = 'com.epam.esm'
	version = '1.0'
	sourceCompatibility = '17'
	targetCompatibility = '17'

	repositories {
		mavenCentral()
	}

	dependencies {
		// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-log4j2
		implementation group: 'org.springframework.boot', name: 'spring-boot-starter-log4j2', version: '3.1.0'
		// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-security
		implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '3.1.0'
		// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-validation
		implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '3.1.0'

		// https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
		implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.10'

		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'

		testImplementation 'org.springframework.boot:spring-boot-starter-test'

	}
	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
		all {
			exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
		}
	}

	bootJar {
		enabled = false
	}

	tasks.named('test') {
		useJUnitPlatform()
	}
}

dependencies {
	implementation project(':core')
	implementation project(':rest-app')
	implementation project(':repository-api')
	implementation project(':repository-jpa-impl')
	implementation project(':service-api')
	implementation project(':service-default-impl')
	implementation project(':security-api')
	implementation project(':security-jwt-impl')
}

jar {
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
	manifest {
		attributes 'Implementation-Name': project.name,
				'Implementation-Version': project.version
	}

	from {
		configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
	}
}
